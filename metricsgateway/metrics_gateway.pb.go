// Code generated by protoc-gen-go. DO NOT EDIT.
// source: metrics_gateway.proto

package metricsgateway

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Measure_MetricType int32

const (
	Measure_GAUGE     Measure_MetricType = 0
	Measure_COUNTER   Measure_MetricType = 1
	Measure_HISTOGRAM Measure_MetricType = 2
	Measure_SUMMARY   Measure_MetricType = 3
)

var Measure_MetricType_name = map[int32]string{
	0: "GAUGE",
	1: "COUNTER",
	2: "HISTOGRAM",
	3: "SUMMARY",
}
var Measure_MetricType_value = map[string]int32{
	"GAUGE":     0,
	"COUNTER":   1,
	"HISTOGRAM": 2,
	"SUMMARY":   3,
}

func (x Measure_MetricType) String() string {
	return proto.EnumName(Measure_MetricType_name, int32(x))
}
func (Measure_MetricType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_metrics_gateway_49b50a4c08b8f0d6, []int{0, 0}
}

type Measure struct {
	Name                 string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                float32            `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	Kind                 Measure_MetricType `protobuf:"varint,3,opt,name=kind,proto3,enum=metricsgateway.Measure_MetricType" json:"kind,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Measure) Reset()         { *m = Measure{} }
func (m *Measure) String() string { return proto.CompactTextString(m) }
func (*Measure) ProtoMessage()    {}
func (*Measure) Descriptor() ([]byte, []int) {
	return fileDescriptor_metrics_gateway_49b50a4c08b8f0d6, []int{0}
}
func (m *Measure) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Measure.Unmarshal(m, b)
}
func (m *Measure) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Measure.Marshal(b, m, deterministic)
}
func (dst *Measure) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Measure.Merge(dst, src)
}
func (m *Measure) XXX_Size() int {
	return xxx_messageInfo_Measure.Size(m)
}
func (m *Measure) XXX_DiscardUnknown() {
	xxx_messageInfo_Measure.DiscardUnknown(m)
}

var xxx_messageInfo_Measure proto.InternalMessageInfo

func (m *Measure) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Measure) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Measure) GetKind() Measure_MetricType {
	if m != nil {
		return m.Kind
	}
	return Measure_GAUGE
}

type GatewaySummary struct {
	MeasureCount         int32    `protobuf:"varint,1,opt,name=measure_count,json=measureCount,proto3" json:"measure_count,omitempty"`
	ElapsedTime          int32    `protobuf:"varint,2,opt,name=elapsed_time,json=elapsedTime,proto3" json:"elapsed_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GatewaySummary) Reset()         { *m = GatewaySummary{} }
func (m *GatewaySummary) String() string { return proto.CompactTextString(m) }
func (*GatewaySummary) ProtoMessage()    {}
func (*GatewaySummary) Descriptor() ([]byte, []int) {
	return fileDescriptor_metrics_gateway_49b50a4c08b8f0d6, []int{1}
}
func (m *GatewaySummary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GatewaySummary.Unmarshal(m, b)
}
func (m *GatewaySummary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GatewaySummary.Marshal(b, m, deterministic)
}
func (dst *GatewaySummary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GatewaySummary.Merge(dst, src)
}
func (m *GatewaySummary) XXX_Size() int {
	return xxx_messageInfo_GatewaySummary.Size(m)
}
func (m *GatewaySummary) XXX_DiscardUnknown() {
	xxx_messageInfo_GatewaySummary.DiscardUnknown(m)
}

var xxx_messageInfo_GatewaySummary proto.InternalMessageInfo

func (m *GatewaySummary) GetMeasureCount() int32 {
	if m != nil {
		return m.MeasureCount
	}
	return 0
}

func (m *GatewaySummary) GetElapsedTime() int32 {
	if m != nil {
		return m.ElapsedTime
	}
	return 0
}

func init() {
	proto.RegisterType((*Measure)(nil), "metricsgateway.Measure")
	proto.RegisterType((*GatewaySummary)(nil), "metricsgateway.GatewaySummary")
	proto.RegisterEnum("metricsgateway.Measure_MetricType", Measure_MetricType_name, Measure_MetricType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MetricsGatewayClient is the client API for MetricsGateway service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MetricsGatewayClient interface {
	AddMeasure(ctx context.Context, opts ...grpc.CallOption) (MetricsGateway_AddMeasureClient, error)
}

type metricsGatewayClient struct {
	cc *grpc.ClientConn
}

func NewMetricsGatewayClient(cc *grpc.ClientConn) MetricsGatewayClient {
	return &metricsGatewayClient{cc}
}

func (c *metricsGatewayClient) AddMeasure(ctx context.Context, opts ...grpc.CallOption) (MetricsGateway_AddMeasureClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MetricsGateway_serviceDesc.Streams[0], "/metricsgateway.MetricsGateway/AddMeasure", opts...)
	if err != nil {
		return nil, err
	}
	x := &metricsGatewayAddMeasureClient{stream}
	return x, nil
}

type MetricsGateway_AddMeasureClient interface {
	Send(*Measure) error
	CloseAndRecv() (*GatewaySummary, error)
	grpc.ClientStream
}

type metricsGatewayAddMeasureClient struct {
	grpc.ClientStream
}

func (x *metricsGatewayAddMeasureClient) Send(m *Measure) error {
	return x.ClientStream.SendMsg(m)
}

func (x *metricsGatewayAddMeasureClient) CloseAndRecv() (*GatewaySummary, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GatewaySummary)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MetricsGatewayServer is the server API for MetricsGateway service.
type MetricsGatewayServer interface {
	AddMeasure(MetricsGateway_AddMeasureServer) error
}

func RegisterMetricsGatewayServer(s *grpc.Server, srv MetricsGatewayServer) {
	s.RegisterService(&_MetricsGateway_serviceDesc, srv)
}

func _MetricsGateway_AddMeasure_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(MetricsGatewayServer).AddMeasure(&metricsGatewayAddMeasureServer{stream})
}

type MetricsGateway_AddMeasureServer interface {
	SendAndClose(*GatewaySummary) error
	Recv() (*Measure, error)
	grpc.ServerStream
}

type metricsGatewayAddMeasureServer struct {
	grpc.ServerStream
}

func (x *metricsGatewayAddMeasureServer) SendAndClose(m *GatewaySummary) error {
	return x.ServerStream.SendMsg(m)
}

func (x *metricsGatewayAddMeasureServer) Recv() (*Measure, error) {
	m := new(Measure)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _MetricsGateway_serviceDesc = grpc.ServiceDesc{
	ServiceName: "metricsgateway.MetricsGateway",
	HandlerType: (*MetricsGatewayServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AddMeasure",
			Handler:       _MetricsGateway_AddMeasure_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "metrics_gateway.proto",
}

func init() {
	proto.RegisterFile("metrics_gateway.proto", fileDescriptor_metrics_gateway_49b50a4c08b8f0d6)
}

var fileDescriptor_metrics_gateway_49b50a4c08b8f0d6 = []byte{
	// 315 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x4f, 0xf2, 0x40,
	0x10, 0xc6, 0x59, 0xa0, 0x2f, 0x61, 0x80, 0xa6, 0xd9, 0x57, 0x23, 0xf1, 0xa0, 0x58, 0x2f, 0x3d,
	0xed, 0x01, 0x13, 0xe3, 0xd1, 0x42, 0x48, 0xe5, 0x50, 0x21, 0x4b, 0x49, 0x34, 0x1e, 0xc8, 0x4a,
	0x27, 0xa4, 0x91, 0xa5, 0x4d, 0xff, 0xa8, 0xfd, 0x50, 0x7e, 0x47, 0xd3, 0x76, 0x8d, 0x29, 0x89,
	0xb7, 0xdd, 0xdf, 0xec, 0xce, 0xf3, 0xcc, 0x3c, 0x70, 0x2a, 0x31, 0x8d, 0x83, 0x6d, 0xb2, 0xd9,
	0x89, 0x14, 0x3f, 0x44, 0xce, 0xa2, 0x38, 0x4c, 0x43, 0xaa, 0x2b, 0xac, 0xa8, 0xf9, 0x45, 0xa0,
	0xe3, 0xa2, 0x48, 0xb2, 0x18, 0x29, 0x85, 0xf6, 0x41, 0x48, 0x1c, 0x92, 0x11, 0xb1, 0xba, 0xbc,
	0x3c, 0xd3, 0x13, 0xd0, 0xde, 0xc5, 0x3e, 0xc3, 0x61, 0x73, 0x44, 0xac, 0x26, 0xaf, 0x2e, 0xf4,
	0x16, 0xda, 0x6f, 0xc1, 0xc1, 0x1f, 0xb6, 0x46, 0xc4, 0xd2, 0xc7, 0x26, 0xab, 0x37, 0x65, 0xaa,
	0x21, 0x73, 0x4b, 0xec, 0xe5, 0x11, 0xf2, 0xf2, 0xbd, 0x79, 0x0f, 0xf0, 0xcb, 0x68, 0x17, 0x34,
	0xc7, 0x5e, 0x3b, 0x33, 0xa3, 0x41, 0x7b, 0xd0, 0x99, 0x2e, 0xd6, 0x8f, 0xde, 0x8c, 0x1b, 0x84,
	0x0e, 0xa0, 0xfb, 0x30, 0x5f, 0x79, 0x0b, 0x87, 0xdb, 0xae, 0xd1, 0x2c, 0x6a, 0xab, 0xb5, 0xeb,
	0xda, 0xfc, 0xd9, 0x68, 0x99, 0x4f, 0xa0, 0x3b, 0x95, 0xca, 0x2a, 0x93, 0x52, 0xc4, 0x39, 0xbd,
	0x86, 0x81, 0xac, 0xf4, 0x36, 0xdb, 0x30, 0x3b, 0xa4, 0xa5, 0x7d, 0x8d, 0xf7, 0x15, 0x9c, 0x16,
	0x8c, 0x5e, 0x41, 0x1f, 0xf7, 0x22, 0x4a, 0xd0, 0xdf, 0xa4, 0x81, 0xac, 0xa6, 0xd1, 0x78, 0x4f,
	0x31, 0x2f, 0x90, 0x38, 0x7e, 0x01, 0xbd, 0xf2, 0x96, 0x28, 0x01, 0x3a, 0x07, 0xb0, 0x7d, 0xff,
	0x67, 0x3b, 0x67, 0x7f, 0x4c, 0x79, 0x7e, 0x71, 0x5c, 0xa8, 0x1b, 0x34, 0x1b, 0x16, 0x99, 0xdc,
	0xc1, 0x65, 0x10, 0xb2, 0x5d, 0x1c, 0x6d, 0x19, 0x7e, 0x0a, 0x19, 0xed, 0x31, 0x39, 0xfa, 0x35,
	0xf9, 0x5f, 0x57, 0x5f, 0x16, 0x71, 0x2d, 0xc9, 0xeb, 0xbf, 0x32, 0xb7, 0x9b, 0xef, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x9e, 0x26, 0xc1, 0x84, 0xd0, 0x01, 0x00, 0x00,
}
